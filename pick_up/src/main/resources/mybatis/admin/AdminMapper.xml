<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.admin.AdminMapper">
    <select id="selectAdminByUsername" resultType="org.example.pojo.Admin">
        SELECT * FROM administrators WHERE username = #{username}
    </select>

    <!-- 新增：查询所有普通用户 -->
    <select id="selectAllOrdinaryUsers" resultType="java.util.Map">
        SELECT * FROM ordinary_users
    </select>

    <!-- 新增：查询所有兼职代取用户 -->
    <select id="selectAllPartTimeUsers" resultType="java.util.Map">
        SELECT * FROM part_time_pickup_users
    </select>

    <!-- 新增：修改用户信息 -->
    <update id="updateUserInfo">
        <choose>
            <when test="tableName == 'ordinary_users'">
                UPDATE ${tableName}
                SET ${field} = #{value}
                WHERE user_id = #{userId}
            </when>
            <when test="tableName == 'part_time_pickup_users'">
                UPDATE ${tableName}
                SET ${field} = #{value}
                WHERE pickup_user_id = #{userId}
            </when>
        </choose>
    </update>

    <!-- 新增：冻结用户账号 -->
    <update id="freezeUser">
        <choose>
            <when test="tableName == 'ordinary_users'">
                UPDATE ${tableName}
                SET account_status = 'inactive'
                WHERE user_id = #{userId}
            </when>
            <when test="tableName == 'part_time_pickup_users'">
                UPDATE ${tableName}
                SET account_status = 'inactive'
                WHERE pickup_user_id = #{userId}
            </when>
        </choose>
    </update>

    <!-- 新增：解冻用户账号 -->
    <update id="unfreezeUser">
        <choose>
            <when test="tableName == 'ordinary_users'">
                UPDATE ${tableName}
                SET account_status = 'active'
                WHERE user_id = #{userId}
            </when>
            <when test="tableName == 'part_time_pickup_users'">
                UPDATE ${tableName}
                SET account_status = 'active'
                WHERE pickup_user_id = #{userId}
            </when>
        </choose>
    </update>

    <!-- 获取普通用户总数 -->
    <select id="getTotalOrdinaryUserCount" resultType="int">
        SELECT COUNT(*) FROM ordinary_users
    </select>

    <!-- 分页查询普通用户 -->
    <select id="getOrdinaryUsersByPage" resultType="java.util.Map">
        SELECT * FROM ordinary_users
                          LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 获取兼职代取用户总数 -->
    <select id="getTotalPartTimeUserCount" resultType="int">
        SELECT COUNT(*) FROM part_time_pickup_users
    </select>

    <!-- 分页查询兼职代取用户 -->
    <select id="getPartTimeUsersByPage" resultType="java.util.Map">
        SELECT * FROM part_time_pickup_users
                          LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 获取公告总数 -->
    <select id="getTotalAnnouncementCount" resultType="int">
        SELECT COUNT(*) FROM announcements
    </select>

    <!-- 分页查询公告 -->
    <select id="getAnnouncementsByPage" resultType="java.util.Map">
        SELECT * FROM announcements
        ORDER BY publish_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 获取包裹总数 -->
    <select id="getTotalPackageCount" resultType="int">
        SELECT COUNT(*) FROM packages
    </select>

    <!-- 分页查询包裹 -->
    <select id="getPackagesByPage" resultType="java.util.Map">
        SELECT *
        FROM packages
        ORDER BY arrival_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 获取代取任务总数 (status != '待接单') -->
    <select id="getTotalPickupTaskCount" resultType="int">
        SELECT COUNT(*) FROM pickup_applications WHERE status != '已处理'
    </select>

    <!-- 分页查询代取任务 (status != '待接单') -->
    <select id="getPickupTasksByPage" resultType="java.util.Map">
        SELECT *
        FROM pickup_applications
        WHERE status != '已处理'
        ORDER BY pickup_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 获取反馈总数 -->
    <select id="getTotalFeedbackCount" resultType="int">
        SELECT COUNT(*) FROM evaluations where is_complaint = 1
    </select>

    <!-- 分页查询反馈 -->
    <select id="getFeedbackByPage" resultType="java.util.Map">
        SELECT *
        FROM evaluations
        where is_complaint = 1
        ORDER BY evaluation_id DESC
        LIMIT #{offset}, #{pageSize}
    </select>
</mapper>